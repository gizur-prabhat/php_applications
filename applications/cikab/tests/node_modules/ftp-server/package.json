{
  "author": {
    "name": "Nicolas Chambrier",
    "email": "naholyr@gmail.com",
    "url": "http://naholyr.fr"
  },
  "name": "ftp-server",
  "description": "Featureless FTP server",
  "version": "0.1.0",
  "homepage": "https://github.com/naholyr/node-ftp-server",
  "repository": {
    "type": "git",
    "url": "git://github.com/naholyr/node-ftp-server.git"
  },
  "main": "lib/ftpd.js",
  "engines": {
    "node": ">= 0.4"
  },
  "dependencies": {},
  "devDependencies": {},
  "scripts": {
    "test": "node test"
  },
  "readme": "[![Build Status](https://secure.travis-ci.org/naholyr/node-ftp-server.png)](http://travis-ci.org/naholyr/node-ftp-server)\n\n# FTP Server -- Simple featureless FTP server\n\nThis is a very simple FTP server. At first it's aimed to simply provide a full-Node implementation of FTP server to be embedded for Unit Testing purpose.\n\nIt's currently highly experimental and could crash anytime. It could become a real FTP server if you want to contribute a bit ;) Don't be afraid: FTP protocol is quite simple.\n\n## Install\n\n```bash\n# Using NPM\nnpm install ftp-server\n```\n\nOr from source:\n\n```bash\n# Install from sources...\ngit clone git://github.com/naholyr/node-ftp-server.git ftp-server\ncd ftp-server\nnpm link\n\n# ...Then in your project\nnpm link ftp-server\n```\n\nYou can run unit tests:\n\n```bash\n# From your project where ftp-server has been installed as a module\nnpm test ftp-server\n\n# Or directly from ftp-server\nnpm test\n```\n\n## Usage\n\nExample: Simply serve a given directory:\n\n```javascript\nvar ftpd = require('ftp-server')\n// Path to your FTP root\nftpd.fsOptions.root = '/path/to/ftp-root'\n// Start listening on port 21 (you need to be root for ports < 1024)\nftpd.listen(21)\n```\n\n## Extend server\n\nJust look at the code. I'll fully document the ways to extend the server with additional features when it's at least more stable.\n\n## Paternity\n\nNote that the original implementation I based my work on was [@billywhizz 's from GitHub](https://github.com/billywhizz/nodeftpd).\n\n## Roadmap\n\n * Add support for rename commands\n * Better implementation of `LIST` and `NLST` to be cross-platform\n * Add support for `REST` command (restart an interrupted download)\n * Maybe wrap all this stuff in a class or at least a function with options (like what FS we'll use)\n * Add better documentation on how to extend server (add \"features\") or new FS wrappers\n * Implement MemoryFS\n * Support authentication from config or even from database\n * Implement all the RFCs from FTP protocol\n",
  "readmeFilename": "README.md",
  "_id": "ftp-server@0.1.0",
  "dist": {
    "shasum": "58334fe5c3cec38b2ea723078a543de66dff0c5b"
  },
  "_from": "ftp-server@0.1.0"
}
